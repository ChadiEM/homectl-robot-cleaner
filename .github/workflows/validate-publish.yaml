name: Build and Publish Image

on:
  push:

env:
  # renovate: datasource=pypi depName=poetry
  POETRY_VERSION: 1.8.3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: Install dependencies
        run: poetry install
      - name: Lint with flake8
        run: poetry run flake8 cleaner --show-source --statistics
      - name: mypy
        run: poetry run mypy cleaner
      - name: Pytest
        run: poetry run pytest tests

  build-push-registry:
    runs-on: ubuntu-latest
    needs: build
    env:
      REGION: europe-west3-docker.pkg.dev
      PROJECT_ID: cluster-340122
      REPOSITORY: container-images

    steps:
      - uses: actions/checkout@v4

      - name: Fetch Repository Name
        id: repo-name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGION }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.REPOSITORY_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
      - uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker $REGION --quiet

      - name: Build and Push Docker Image to Artifact Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64